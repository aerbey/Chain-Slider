/*!
* hiddenbox v1.1
* Copyright 2013, Burak ANLAR 
* email: burakanlar@gmail.com
*/
(function ($, f) { $.fn.hiddenbox = function (opt) { opt = $.extend({}, $.fn.hiddenbox.defaults, opt); opt.position = opt.position.toLowerCase(); init($(this), opt) }; function init($this, o) { var style = 'display: block; padding: 0; position: fixed; z-index: 9999;'; if (o.position == "left") { var pos = ($this.find('.' + o.innerClass).width() * -1) + 'px'; style += 'float: left; left: ' + pos + '; top: ' + o.top; $this.find('.' + o.triggerClass).css('float', 'right'); $this.find('.' + o.innerClass).css('float', 'left') } else if (o.position == "right") { var pos = ($this.find('.' + o.innerClass).width() * -1) + 'px'; style += 'float: right; right: ' + pos + '; top: ' + o.top; $this.find('.' + o.triggerClass).css('float', 'left'); $this.find('.' + o.innerClass).css('float', 'right') } else if (o.position == "top") { var pos = ($this.find('.' + o.innerClass).height() * -1) + 'px'; style += 'left: ' + o.left + '; top: ' + pos; var shtml = $this.find('.' + o.triggerClass).html(); var ihtml = $this.find('.' + o.innerClass).html(); $this.html('').prepend('<div class="' + o.triggerClass + '">' + shtml + '</div>').prepend('<div class="' + o.innerClass + '">' + ihtml + '</div>'); $this.find('.' + o.triggerClass).css('float', 'none'); $this.find('.' + o.innerClass).css('float', 'none') } else if (o.position == "bottom") { var pos = ($this.find('.' + o.innerClass).height() * -1) + 'px'; style += 'left: ' + o.left + '; bottom: ' + pos; var shtml = $this.find('.' + o.triggerClass).html(); var ihtml = $this.find('.' + o.innerClass).html(); $this.html('').prepend('<div class="' + o.innerClass + '">' + ihtml + '</div>').prepend('<div class="' + o.triggerClass + '">' + shtml + '</div>'); $this.find('.' + o.triggerClass).css('float', 'none'); $this.find('.' + o.innerClass).css('float', 'none') } $this.attr('style', style); $this.find('.' + o.triggerClass).bind(o.method, function () { $.fn.hiddenbox.move($this, o, true); return false }); $this.bind('mouseleave', function () { $.fn.hiddenbox.move($this, o, false) }) } $.fn.hiddenbox.defaults = { speed: 500, delay: 100, left: '', right: '', top: '', bottom: '', triggerClass: 'trigger', innerClass: 'container', easing: 'swing', position: "left", method: 'hover', before: function (el, o, s) { }, complete: function (el, o, s) { } }; $.fn.hiddenbox.move = function (el, o, s) { var p = o.position == "left" || o.position == "right" ? (el.find('.' + o.innerClass).width() * -1) : (el.find('.' + o.innerClass).height() * -1); var pos = s ? "0px" : p + "px"; if (o.position == "left") o.left = pos; else if (o.position == "right") o.right = pos; else if (o.position == "top") o.top = pos; else if (o.position == "bottom") o.bottom = pos; playAnimation(el, o, s) }; function playAnimation(el, o, s) { o.before(el, o, s); var option = {}; if (o.position == "left") option.left = o.left; else if (o.position == "right") option.right = o.right; else if (o.position == "top") option.top = o.top; else if (o.position == "bottom") option.bottom = o.bottom; var delay = setTimeout(function () { clearTimeout(delay); el.stop(true, false).animate(option, o.speed, o.easing, function () { o.complete(el, o, s) }) }, o.delay) } }(jQuery, false));